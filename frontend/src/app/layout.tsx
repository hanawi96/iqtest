import React from 'react';
import type { Metadata, Viewport } from 'next';
import { Inter } from 'next/font/google';
import '../styles/globals.css';

const inter = Inter({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-inter',
});

export const metadata: Metadata = {
  metadataBase: new URL('https://testiq.vn'),
  title: {
    default: 'TestIQ - Website Test IQ Th√¥ng Minh',
    template: '%s | TestIQ',
  },
  description:
    'üß† Ki·ªÉm tra ch·ªâ s·ªë IQ c·ªßa b·∫°n v·ªõi 60 c√¢u h·ªèi trong 25 ph√∫t. Nhanh, ch√≠nh x√°c, v√† hi·ªán ƒë·∫°i v·ªõi c√¥ng ngh·ªá AI ti√™n ti·∫øn.',
  keywords: [
    'IQ test',
    'intelligence test',
    'tr√≠ tu·ªá nh√¢n t·∫°o',
    'ki·ªÉm tra IQ',
    'test th√¥ng minh',
    'ƒëo l∆∞·ªùng IQ',
    'ph√¢n t√≠ch tr√≠ tu·ªá',
    'gamification',
  ],
  authors: [{ name: 'TestIQ Team' }],
  creator: 'TestIQ Team',
  openGraph: {
    type: 'website',
    locale: 'vi_VN',
    url: 'https://testiq.vn',
    siteName: 'TestIQ',
    title: 'TestIQ - Website Test IQ Th√¥ng Minh',
    description:
      'üß† Ki·ªÉm tra ch·ªâ s·ªë IQ c·ªßa b·∫°n v·ªõi 60 c√¢u h·ªèi trong 25 ph√∫t. Nhanh, ch√≠nh x√°c, v√† hi·ªán ƒë·∫°i.',
    images: [
      {
        url: '/og-image.png',
        width: 1200,
        height: 630,
        alt: 'TestIQ - Website Test IQ Th√¥ng Minh',
      },
    ],
  },
  twitter: {
    card: 'summary_large_image',
    title: 'TestIQ - Website Test IQ Th√¥ng Minh',
    description: 'üß† Ki·ªÉm tra ch·ªâ s·ªë IQ c·ªßa b·∫°n v·ªõi 60 c√¢u h·ªèi trong 25 ph√∫t.',
    images: ['/twitter-image.png'],
  },
  robots: {
    index: true,
    follow: true,
    googleBot: {
      index: true,
      follow: true,
      'max-video-preview': -1,
      'max-image-preview': 'large',
      'max-snippet': -1,
    },
  },
};

export const viewport: Viewport = {
  themeColor: [
    { media: '(prefers-color-scheme: light)', color: '#0ea5e9' },
    { media: '(prefers-color-scheme: dark)', color: '#0ea5e9' },
  ],
  width: 'device-width',
  initialScale: 1,
  maximumScale: 1,
  userScalable: false,
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="vi" className={inter.variable}>
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="anonymous"
        />
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link rel="icon" href="/icon.svg" type="image/svg+xml" />
        <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
        <link rel="manifest" href="/manifest.json" />
      </head>
      <body className={`${inter.className} antialiased`}>
        <div id="root" className="min-h-screen">
          {children}
        </div>
      </body>
    </html>
  );
}
